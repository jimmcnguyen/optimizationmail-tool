import requests, random, string, lxml.html, copy, xlrd, re
import time
from bs4 import BeautifulSoup
from xlutils.copy import copy
from selenium.webdriver.chrome.options import Options
from selenium.webdriver import Chrome


accountList = open("C:\\Users\\jnguyen\\PycharmProjects\\directories\\accounts.txt")


# pw generator
# def password():
#     chars = (string.digits * 7) + string.ascii_letters
#     password = ' '
#     for c in range(10):
#         password += random.choice(chars)
#     return password.strip()


# grabs all the accounts from the customer profile page and transfers it to a .txt file
def customerProfile():

    userinput = input('Input Customer Profile URL: ')
    print('Grabbing all accounts from the link')

    s = requests.Session()
    login = s.get('https://auth.ad.iq/login')
    login_html = lxml.html.fromstring(login.text)
    hidden_inputs = login_html.xpath(r'//form//input[@type="hidden"]')
    form = {x.attrib["name"]: x.attrib["value"] for x in hidden_inputs}
    # print(form)
    form['username'] = 'jimmyn@ad.iq'
    form['password'] = 'Waterboy241!'
    response = s.post('https://auth.ad.iq/login', data=form)
    internal = s.get(userinput)
    html = internal.text
    soup = BeautifulSoup(html, features="lxml")
    for link in soup.findAll('a', href=re.compile('/customers/')):
        text_file = open('accounts.txt', 'a')
        text_file.write('https://cocreate.ad.iq' + link.get('href') + '\n')
    print('All accounts transferred to .txt')
    print('Now extracting all information to excel...')
    text_file.close()


# parsing function
def parseFunc():

    # date function
    # opts = Options()
    # opts.set_headless()
    # assert opts.headless
    # browser = Chrome(options=opts)
    # browser.get(item)
    #
    # emailElem = browser.find_element_by_id('admin_email')
    # emailElem.send_keys('jimmyn@ad.iq')
    # passwordElem = browser.find_element_by_id('admin_password')
    # passwordElem.send_keys('Waterboy241!')
    # passwordElem.submit()
    # websiteButton = browser.find_element_by_css_selector('#account')
    # websiteButton.click()
    # print('')
    # soup_level1 = BeautifulSoup(browser.page_source, 'lxml')
    # customerSince = browser.find_element_by_css_selector('#account-panel > article > section:nth-child(1) > div:nth-child(2) > span.c-field__text')
    # browser.quit()

    # password generator
    chars = string.digits + string.ascii_letters
    upper = string.ascii_uppercase
    lower = string.ascii_lowercase
    numbers = string.digits
    password = ' '
    password += random.choice(upper)
    password += random.choice(lower)
    password += random.choice(numbers)
    for c in range(7):
        password += random.choice(chars)

    s = requests.Session()
    login = s.get('https://auth.ad.iq/login')
    login_html = lxml.html.fromstring(login.text)
    hidden_inputs = login_html.xpath(r'//form//input[@type="hidden"]')
    form = {x.attrib["name"]: x.attrib["value"] for x in hidden_inputs}
    # print(form)
    form['username'] = 'jimmyn@ad.iq'
    form['password'] = 'Waterboy241!'
    response = s.post('https://auth.ad.iq/login', data=form)
    internal = s.get(item)
    if '%0A' in internal.url:
        internal2 = internal.url[:-3]
    else:
        internal2 = internal
    internal3 = s.get(internal2)
    html = internal3.text
    soup = BeautifulSoup(html, features="lxml")
    companyNameElement = soup.select('.c-header__name')
    companyName = companyNameElement[0].getText()
    clientNameElement = soup.select(".c-card__contacttext")
    clientName = clientNameElement[0].getText()  # client name
    clientNameSplit = list(clientName.split(" "))
    accNumber = item[33:]
    email = clientNameSplit[0].lower() + accNumber + "@optimizationmail.com"
    userName = clientNameSplit[0].lower() + accNumber
    enabled = 1

    # inputs acc and pw into crm
    try:
        opts = Options()
        opts.set_headless()
        assert opts.headless
        browser = Chrome(options=opts)
        browser.get(item)
        emailElem = browser.find_element_by_id('admin_email')
        emailElem.send_keys('jimmyn@ad.iq')
        passwordElem = browser.find_element_by_id('admin_password')
        passwordElem.send_keys('Waterboy241!')
        passwordElem.submit()
        # logged in
        time.sleep(2.0)
        accountElem = browser.find_element_by_css_selector('#account')
        accountElem.click()
        time.sleep(2.0)
        soup2 = BeautifulSoup(browser.page_source, 'lxml')
        customerSince = browser.find_element_by_css_selector(
            '#account-panel > article > section:nth-child(1) > div:nth-child(2) > span.c-field__text')
        customerSinceElem = customerSince.text
        onlineProfileElem = browser.find_element_by_css_selector('#directories')
        onlineProfileElem.click()
        time.sleep(2.0)
        editButton = browser.find_element_by_css_selector(
            '#directories-panel > form > div:nth-child(4) > div:nth-child(1) > div > a')
        editButton.click()
        time.sleep(2.0)
        soup1 = BeautifulSoup(browser.page_source, 'lxml')
        emailField = browser.find_element_by_id('directory_account_email')
        pwField = browser.find_element_by_id('directory_account_password')
        saveButton = browser.find_element_by_css_selector('#edit_directory_account_32 > div > button')
        if '@optimizationmail.com' not in soup1.text:
            emailField.send_keys(email)
            pwField.send_keys(password.strip())
            saveButton.click()
            time.sleep(2.0)
        elif '@optimizationmail.com' in soup1.text:
            pass
    except:
        print('Error occurred for ' + item)

    # output to excel
    # rb = xlrd.open_workbook('accounts.xls', formatting_info=True)
    rb = xlrd.open_workbook('accounts.xls')
    r_sheet = rb.sheet_by_index(0)
    r = r_sheet.nrows
    wb = copy(rb)
    sheet = wb.get_sheet(0)
    sheet.write(r, 0, customerSinceElem)
    sheet.write(r, 1, item)
    sheet.write(r, 2, companyName.strip())
    sheet.write(r, 3, clientName)
    sheet.write(r, 4, accNumber)
    sheet.write(r, 5, email)
    sheet.write(r, 6, userName)
    sheet.write(r, 7, password.strip())
    sheet.write(r, 8, enabled)
    wb.save('accounts.xls')

    # exists chromedriver
    browser.quit()


customerProfile()
for item in accountList:
    parseFunc()
print('Done')
accountList.close()
